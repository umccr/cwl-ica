/*  Author:Alexis Lucattini */
/*  For assistance on generation of typescript expressions */
/*  In CWL, please visit our wiki page at https://github.com/umccr/cwl-ica/wiki/TypeScript */
/*  Imports */
/*  Functions */
function is_not_null(input_obj) {
    /*
    Determine if input object is defined and is not null
    */
    return !(input_obj === null || input_obj === undefined);
}
function get_attribute_from_optional_input(input_object, attribute) {
    /*
    Get attribute from optional input -
    If input is not defined, then return null
    */
    if (input_object === null || input_object === undefined) {
        return null;
    }
    else {
        return get_optional_attribute_from_object(input_object, attribute);
    }
}
function get_optional_attribute_from_object(input_object, attribute) {
    /*
    Get attribute from object, if attribute is not defined return null
    Assume the input object is an object of key value pairs where we know the key is of type string
    https:/* stackoverflow.com/questions/56833469/typescript-error-ts7053-element-implicitly-has-an-any-type */
    */
    if (input_object.hasOwnProperty(attribute)) {
        return input_object[attribute];
    }
    else {
        return null;
    }
}
function get_bool_value_as_str(input_bool) {
    if (is_not_null(input_bool) && input_bool) {
        return "true";
    }
    else {
        return "false";
    }
}
function boolean_to_int(input_bool) {
    if (is_not_null(input_bool) && String(input_bool).toLowerCase() === "true") {
        return 1;
    }
    else {
        return 0;
    }
}
function get_optional_attribute_from_multi_type_input_object(object, attribute) {
    /*
    Get attribute from optional input
    */
    if (object === null || object === undefined) {
        return null;
    }
    else if (typeof object === "object") {
        /*  Get attribute from optional input */
        return get_attribute_from_optional_input(object, attribute);
    }
    else {
        /*  Object is likely actually an str */
        return object;
    }
}
