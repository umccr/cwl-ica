cwlVersion: v1.1
class: CommandLineTool

# Extensions
$namespaces:
    s: https://schema.org/
    ilmn-tes: https://platform.illumina.com/rdf/ica/
$schemas:
  - https://schema.org/version/latest/schemaorg-current-http.rdf

# Metadata
s:author:
    class: s:Person
    s:name: Alexis Lucattini
    s:email: Alexis.Lucattini@umccr.org
    s:identifier: https://orcid.org/0000-0001-9754-647X

# ID/Docs
id: arriba-fusion-calling--2.5.0
label: arriba-fusion-calling v(2.5.0)
doc: |
    Documentation for arriba-fusion-calling v2.5.0

# ILMN V1 Resources Guide: https://illumina.gitbook.io/ica-v1/analysis/a-taskexecution#type-and-size
# ILMN V2 Resources Guide: https://help.ica.illumina.com/project/p-flow/f-pipelines#compute-types
hints:
  ResourceRequirement:
    ilmn-tes:resources/tier: standard
    ilmn-tes:resources/type: standard
    ilmn-tes:resources/size: large
    coresMin: 8
    ramMin: 28000
  DockerRequirement:
    dockerPull: public.ecr.aws/biocontainers/arriba:2.5.0--h87b9561_1

requirements:
  SchemaDefRequirement:
    types:
      - $import: ../../../schemas/bam-input/1.0.0/bam-input__1.0.0.yaml#bam-input
      - $import: ../../../schemas/cram-input/1.0.0/cram-input__1.0.0.yaml#cram-input
  InlineJavascriptRequirement: {}

baseCommand: [ "draw_fusions.R" ]

inputs:
  # Data input
  alignment_data:
    label: alignment data
    doc: |
      File in SAM/BAM/CRAM format with main alignments as generated by STAR
    type:
      - ../../../schemas/bam-input/1.0.0/bam-input__1.0.0.yaml#bam-input
      - ../../../schemas/cram-input/1.0.0/cram-input__1.0.0.yaml#cram-input
    inputBinding:
      prefix: -x
      position: -1
      valueFrom: |
        ${
          if (self.bam_input) {
            return self.bam_input.path
          } else {
            return self.cram_input.path
          }
        }

  # Reference files
  annotation_gtf:
    label: annotation gtf
    doc: |
      GTF file with gene annotation. The file may be gzip-compressed
    type: File
    inputBinding:
      prefix: -g
  reference_fasta:
    label: reference fasta
    doc: |
      FastA file with genome sequence (assembly). The file may be gzip-compressed
    type: File
    inputBinding:
      prefix: -a
    secondaryFiles:
      - pattern: ".fai"
        required: false
  blacklist_tsv:
    label: blacklist tsv
    doc: |
      File containing blacklisted ranges
    type: File
    inputBinding:
      prefix: -b

  # Output file names
  fusions_filename:
    label: fusion
    doc: |
      Output file with fusions that have passed all filters
    type: string?
    default: fusions.tsv
    inputBinding:
      prefix: -o
  discarded_fusions_filename:
    label: discarded fusion
    doc: |
      Output file with fusions that were discarded due to filtering
    type: string?
    default: fusions-discarded.tsv
    inputBinding:
      prefix: -O

  # Optional Parameters
  contigs:
    label: contigs
    doc: |
      List of interesting contigs. Fusions between genes on other contigs are ignored
    type: string[]?
    default:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      - 13
      - 14
      - 15
      - 16
      - 17
      - 18
      - 19
      - 20
      - 21
      - 22
      - X
      - Y
      - AC_*
      - NC_*
    inputBinding:
      prefix: -i
      valueFrom: |
        ${
          if (self && self.length > 0) {
            return self.join(',');
          } else {
            return '';
          }
        }
  bam_without_chimeric_alignments:
    label: bam without chimeric alignments
    doc: |
      File in SAM/BAM/CRAM format with chimeric alignments as generated by STAR
      (Chimeric.out.sam). This parameter is only required, if STAR was run with the
      parameter '--chimOutType SeparateSAMold'. When STAR was run with the parameter
      '--chimOutType WithinBAM', it suffices to pass the parameter -x to Arriba and -c
      can be omitted.
    type: File?
    inputBinding:
      prefix: -c
  gtf_features:
    label: GTF features
    doc: |
      List of names of GTF features.
      Default: gene_name=gene_name|gene_id gene_id=gene_id
      transcript_id=transcript_id feature_exon=exon feature_CDS=CDS
    type: string[]?
    default:
      - gene_name=gene_name|gene_id
      - gene_id=gene_id
      - transcript_id=transcript_id
      - feature_exon=exon
      - feature_CDS=CDS
    inputBinding:
      prefix: -G
      valueFrom: |
        ${
          if (self && self.length > 0) {
            return self.join(',');
          } else {
            return '';
          }
        }
  known_fusions:
    label: known fusions
    doc: |
      File containing known/recurrent fusions. Some cancer entities are often
      characterized by fusions between the same pair of genes. In order to boost
      sensitivity, a list of known fusions can be supplied using this parameter. The list
      must contain two columns with the names of the fused genes, separated by tabs.
    type: File?
    inputBinding:
      prefix: -k
  tags:
    label: tags
    doc: |
      Tab-separated file containing fusions to annotate with tags in the 'tags' column.
      The first two columns specify the genes; the third column specifies the tag. The
      file may be gzip-compressed.
    type: File?
    inputBinding:
      prefix: -t
  coordinates_protein_domains:
    label: coordinates protein domains
    doc: |
      File in GFF3 format containing coordinates of the protein domains of genes. The
      protein domains retained in a fusion are listed in the column
      'retained_protein_domains'. The file may be gzip-compressed.
    type: File?
    inputBinding:
      prefix: -p
  coordinates_structural_variants:
    label: coordinates structural variants
    doc: |
      Tab-separated file with coordinates of structural variants found using
      whole-genome sequencing data. These coordinates serve to increase sensitivity
      towards weakly expressed fusions and to eliminate fusions with low evidence.
    type: File?
    inputBinding:
      prefix: -d
  genomic_breakpoint:
    label: genomic breakpoint
    doc: |
      When a file with genomic breakpoints obtained via whole-genome sequencing is supplied via the -d
      parameter, this parameter determines how far a genomic breakpoint may be away from a
      transcriptomic breakpoint to consider it as a related event. For events inside genes, the
      distance is added to the end of the gene; for intergenic events, the distance threshold is
      applied as is. Default: 100000
    type: int?
    inputBinding:
      prefix: -D
  strandedness:
    label: strandedness
    doc: |
      Whether a strand-specific protocol was used for library preparation,
      and if so, the type of strandedness (auto/yes/no/reverse). When
      unstranded data is processed, the strand can sometimes be inferred from
      splice-patterns. But in unclear situations, stranded data helps
      resolve ambiguities. Default: auto
    type: string?
    inputBinding:
      prefix: -s
  viral_contigs:
    label: viral contigs
    doc: |
      Comma-/space-separated list of viral contigs. Asterisks (*) are treated as
      wild-cards.
      Default: AC_* NC_*
    type: string?
    inputBinding:
      prefix: -v
  filters:
    label: filters
    doc: |
      List of filters to disable. By default all filters are
      enabled. Valid values: 
        top_expressed_viral_contigs
        viral_contigs,
        low_coverage_viral_contigs
        uninteresting_contigs,
        no_genomic_support
        short_anchor
        select_best
        many_spliced
        long_gap,
        marginal_read_through
        merge_adjacent
        hairpin
        small_insert_size,
        same_gene
        mismappers
        spliced
        genomic_support
        read_through,
        no_coverage
        mismatches
        homopolymer
        low_entropy
        multimappers,
        inconsistently_clipped
        duplicates
        homologs
        blacklist,
        relative_support
        min_support
        end_to_end
        known_fusions,
        non_coding_neighbors
        isoforms
        intronic
        in_vitro
        intragenic_exonic,
        internal_tandem_duplication
    type: string[]?
    inputBinding:
      prefix: -f
      valueFrom: |
        ${
          if (self && self.length > 0) {
            return self.join(',');
          } else {
            return '';
          }
        }
  max_e_value:
    label: max e value
    doc: |
      Arriba estimates the number of fusions with a given number of supporting
      reads which one would expect to see by random chance. If the expected number
      of fusions (e-value) is higher than this threshold, the fusion is
      discarded by the 'relative_support' filter. Note: Increasing this
      threshold can dramatically increase the number of false positives and may
      increase the runtime of resource-intensive steps. Fractional values are
      possible. Default: 0.300000
    type: int?
    inputBinding:
      prefix: -E
  min_supporting_reads:
    label: min supporting reads
    doc: |
      The 'min_support' filter discards all fusions with fewer than
      this many supporting reads (split reads and discordant mates
      combined). Default: 2
    type: int?
    inputBinding:
      prefix: -S
  max_mismappers:
    label: max mismappers
    doc: |
      When more than this fraction of supporting reads turns out to be
      mismappers, the 'mismappers' filter discards the fusion. Default:
      0.800000
    type: int?
    inputBinding:
      prefix: -m
  max_homolog_identity:
    label: max homolog identity
    doc: |
      Genes with more than the given fraction of sequence identity are
      considered homologs and removed by the 'homologs' filter.
      Default: 0.300000
    type: int?
    inputBinding:
      prefix: -L
  homopolymer_length:
    label: homopolymer length
    doc: |
      The 'homopolymer' filter removes breakpoints adjacent to
      homopolymers of the given length or more. Default: 6
    type: int?
    inputBinding:
      prefix: -H
  read_through_distance:
    label: read through distance
    doc: |
      The 'read_through' filter removes read-through fusions
      where the breakpoints are less than the given distance away
      from each other. Default: 10000
    type: int?
    inputBinding:
      prefix: -R
  min_anchor_length:
    label: min anchor length
    doc: |
      Alignment artifacts are often characterized by split reads coming
      from only one gene and no discordant mates. Moreover, the split
      reads only align to a short stretch in one of the genes. The
      'short_anchor' filter removes these fusions. This parameter sets
      the threshold in bp for what the filter considers short. Default: 23
    type: int?
    inputBinding:
      prefix: -A
  many_spliced_events:
    label: many spliced events
    doc: |
      The 'many_spliced' filter recovers fusions between genes that
      have at least this many spliced breakpoints. Default: 4
    type: int?
    inputBinding:
      prefix: -M
  max_kmer_content:
    label: max kmer content
    doc: |
      The 'low_entropy' filter removes reads with repetitive 3-mers. If
      the 3-mers make up more than the given fraction of the sequence, then
      the read is discarded. Default: 0.600000
    type: int?
    inputBinding:
      prefix: -K
  max_mismatch_pvalue:
    label: max mismatch pvalue
    doc: |
      The 'mismatches' filter uses a binomial model to calculate a
      p-value for observing a given number of mismatches in a read. If
      the number of mismatches is too high, the read is discarded.
      Default: 0.010000
    type: int?
    inputBinding:
      prefix: -V
  fragment_length:
    label: fragment length
    doc: |
      When paired-end data is given, the fragment length is estimated
      automatically and this parameter has no effect. But when single-end
      data is given, the mean fragment length should be specified to
      effectively filter fusions that arise from hairpin structures.
      Default: 200
    type: int?
    inputBinding:
      prefix: -F
  max_reads:
    label: max reads
    doc: |
      Subsample fusions with more than the given number of supporting reads. This
      improves performance without compromising sensitivity, as long as the
      threshold is high. Counting of supporting reads beyond the threshold is
      inaccurate, obviously. Default: 300
    type: int?
    inputBinding:
      prefix: -U
  quantile:
    label: quantile
    doc: |
      Highly expressed genes are prone to produce artifacts during library
      preparation. Genes with an expression above the given quantile are eligible
      for filtering by the 'in_vitro' filter. Default: 0.998000
    type: int?
    inputBinding:
      prefix: -Q
  exonic_fraction:
    label: exonic fraction
    doc: |
      The breakpoints of false-positive predictions of intragenic events
      are often both in exons. True predictions are more likely to have at
      least one breakpoint in an intron, because introns are larger. If the
      fraction of exonic sequence between two breakpoints is smaller than
      the given fraction, the 'intragenic_exonic' filter discards the
      event. Default: 0.330000
    type: int?
    inputBinding:
      prefix: -e
  top_n:
    label: top N
    doc: |
      Only report viral integration sites of the top N most highly expressed viral
      contigs. Default: 5
    type: int?
    inputBinding:
      prefix: -T
  covered_fraction:
    label: covered fraction
    doc: |
      Ignore virally associated events if the virus is not fully
      expressed, i.e., less than the given fraction of the viral contig is
      transcribed. Default: 0.050000
    type: int?
    inputBinding:
      prefix: -C
  max_itd_length:
    label: max itd length
    doc: |
      Maximum length of internal tandem duplications. Note: Increasing
      this value beyond the default can impair performance and lead to many
      false positives. Default: 100
    type: int?
    inputBinding:
      prefix: -l
  min_itd_allele_fraction:
    label: min itd allele fraction
    doc: |
      Required fraction of supporting reads to report an internal
      tandem duplication. Default: 0.070000
    type: int?
    inputBinding:
      prefix: -z
  min_itd_supporting_reads:
    label: min itd supporting reads
    doc: |
      Required absolute number of supporting reads to report an
      internal tandem duplication. Default: 10
    type: int?
    inputBinding:
      prefix: -Z
  threads:
    label: threads
    doc: |
      Number of threads to use for BAM/CRAM file reading. 
      Note that in most situations 1 thread is optimal.
      Values >2 almost never show further speedup.
    type: int?
    default: 2
    inputBinding:
      prefix: -@

outputs:
  fusions:
    label: fusions
    doc: |
      file with output fusions
    type: File
    outputBinding:
      glob: "$(inputs.fusions_filename)"
  discarded_fusions:
    label: discarded fusions
    doc: |
      file with discarded fusions
    type: File
    outputBinding:
      glob: "$(inputs.discarded_fusions_filename)"

successCodes:
  - 0

