cwlVersion: v1.1
class: CommandLineTool

# Extensions
$namespaces:
    s: https://schema.org/
    ilmn-tes: http://platform.illumina.com/rdf/ica/
$schemas:
  - https://schema.org/version/latest/schemaorg-current-http.rdf

# Metadata
s:author:
    class: s:Person
    s:name: Alexis Lucattini
    s:email: Alexis.Lucattini@umccr.org
    s:identifier: https://orcid.org/0000-0001-9754-647X

# ID/Docs
id: optitype--1.3.5
label: optitype v(1.3.5)
doc: |
  OptiType is a novel HLA genotyping algorithm based on integer linear programming,
  capable of producing accurate 4-digit HLA genotyping predictions from NGS data by simultaneously
  selecting all major and minor HLA Class I alleles.

# ILMN V1 Resources Guide: https://illumina.gitbook.io/ica-v1/analysis/a-taskexecution#type-and-size
# ILMN V2 Resources Guide: https://help.ica.illumina.com/project/p-flow/f-pipelines#compute-types
hints:
    ResourceRequirement:
        ilmn-tes:resources/tier: standard
        ilmn-tes:resources/type: standard
        ilmn-tes:resources/size: xlarge
        coresMin: 4
        ramMin: 14000
    DockerRequirement:
        dockerPull: quay.io/biocontainers/optitype:1.3.5--0

requirements:
  InlineJavascriptRequirement: {}

baseCommand: ["OptiTypePipeline.py"]

arguments:
  - valueFrom: "--dna"
    # Before all other arguments
    position: -1

inputs:
  input_fastqs:
    label: Input Fastq file(s)
    doc: |
      .fastq file(s) (fished or raw) or .bam files stored
       for re-use, generated by an earlier OptiType run. One
       file: single-end mode, two files: paired-end mode.
    type: File[]
    inputBinding:
      prefix: "--input"
      position: 1
  seq_datatype:
    label: Sequencing data type
    doc: |
      The sequencing type either dna or rna
    type:
      - type: enum
        symbols:
          - dna
          - rna
    inputBinding:
      valueFrom: "--$(self)"
  beta:
    label: Beta Value
    doc: |
      The beta value for for homozygosity detection (see
      paper). Default: 0.009. Handle with care.
    type: float?
    inputBinding:
      prefix: "--beta"
  enumerate:
    label: enumerate
    doc: |
      Number of enumerations. OptiType will output the
      optimal solution and the top N-1 suboptimal solutions
      in the results CSV. Default: 1
    type: int?
    inputBinding:
      prefix: "--enumerate"
  output_directory_name:
    label: output directory name
    doc: |
      Place to put all the output files
    type: string
    default: "optitype"
    inputBinding:
      prefix: "--outdir"
  output_prefix:
    label: output prefix
    doc: |
      Name of the sample - used for the prefix argument
    type: string
    inputBinding:
      prefix: "--prefix"
  verbosity:
    label: verbosity
    doc: |
      Turn on verbose mode
    type: boolean?
    inputBinding:
      prefix: "--verbose"
  config:
    label: config
    doc: |
      Path to config file. Default: config.ini in the same
      directory as this script
    type: File?
    inputBinding:
      prefix: "--config"

outputs:
  output_directory:
    label: output directory
    doc: |
      The optitype output directory
    type: Directory
    outputBinding:
      glob: "$(inputs.output_directory_name)"
  result_matrix:
    label: result matrix
    doc: |
      The output result tsv file
    type: File?
    outputBinding:
      glob: "$(inputs.output_directory_name)/$(inputs.output_prefix)_result.tsv"
  coverage_plot:
    label: coverage plot
    doc: |
      The output coverage plot
    type: File?
    outputBinding:
      glob: "$(inputs.output_directory_name)/$(inputs.output_prefix)_coverage_plot.pdf"

successCodes:
  - 0