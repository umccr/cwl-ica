import { DragenWgtsAlignmentOptions } from "../../dragen-wgts-alignment-options/4.4.4/dragen-wgts-alignment-options__4.4.4"
import { FileProperties as IFile } from "cwl-ts-auto"
import { FastqListRowsInput } from "../../fastq-list-rows-input/2.0.0/fastq-list-rows-input__2.0.0"
import { BamInput } from "../../bam-input/1.0.0/bam-input__1.0.0"
import { CramInput } from "../../cram-input/1.0.0/cram-input__1.0.0"

export interface DragenWgtsOptionsAlignmentStage {
	/*
	alignment options: 
	Specifies the alignment options
	*/
	alignment_options: DragenWgtsAlignmentOptions

	/*
	enable rna: 
	Specifies whether the sample is RNA or DNA. This option is used to determine the alignment algorithm to use.
	If set to true, the sample is treated as RNA and the appropriate alignment algorithm is used.
	*/
	enable_rna?: boolean

	/*
	lic instance id location: 
	Use this option to override the default cloud instance ID location
	*/
	lic_instance_id_location?: string | IFile

	/*
	ora reference: 
	The ora reference to use for decompression of fastq files.
	*/
	ora_reference?: IFile

	/*
	output directory: 
	Specifies the output directory.
	*/
	output_directory: string

	/*
	output file prefix: 
	Outputs file name prefix to use for all files generated by the pipeline.
	*/
	output_file_prefix: string

	/*
	ref tar: 
	Specifies the tarball containing the reference hash table. If the reference is not already loaded into the DRAGEN card, the option automatically loads the reference.
	Note that the actual dragen command is '--ref-dir' but we first need to download and extract the tarball.
	*/
	ref_tar: IFile

	/*
	sequence data: 
	The sequence data to be aligned and called variants on.
	This can either be a bam file, cram file or a list of fastq list row objects
	*/
	sequence_data: FastqListRowsInput | BamInput | CramInput
}
